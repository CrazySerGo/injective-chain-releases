version: '3.9'

networks:
  injective:
    name: injective

services:

  mongo:
    container_name: mongo
    image: mongo:${INJ_MONGO_DB_IMAGE_TAG}
    restart: always
    command: mongod --dbpath /data/db --replSet rs0 --port 27017 --bind_ip 0.0.0.0
    ports:
      - ${INJ_MONGO_DB_PORT}:${INJ_MONGO_DB_PORT}
    networks:
      - injective
    volumes:
      - ./volumes/mongo/db:/data/db
      - ./scripts/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
      - ./volumes/mongo/exchangedb:/exchangedb

  injective-core:
    container_name: injective-core
    image: ${INJ_CORE_IMAGE_REPO}:${INJ_IMAGE_TAG}
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      APP_ENV: ${APP_ENV}
      APP_VERSION: ${APP_VERSION}
      LOG_BUGSNAG_KEY: ""
      LOG_BUGSNAG_ENABLED: "false"
    command:
      - /bin/sh
      - -c
      - |
        ulimit -n 120000
        yes 12345678 | injectived \
        --log-level=warn \
        --rpc.laddr "tcp://0.0.0.0:26657" \
        --statsd-address=statsd.injective.dev:8125 \
        --statsd-enabled=true \
        start
    ports:
      - ${INJ_NETWORK_P2P_PORT}:${INJ_NETWORK_P2P_PORT}
      - ${INJ_NETWORK_GRPC_PORT}:${INJ_NETWORK_GRPC_PORT}
      - ${INJ_NETWORK_COSMOS_API_PORT}:${INJ_NETWORK_COSMOS_API_PORT}
      - ${INJ_NETWORK_COSMOS_GRPC_PORT}:${INJ_NETWORK_COSMOS_GRPC_PORT}
      - ${INJ_NETWORK_COSMOS_GRPC_WEB_PORT}:${INJ_NETWORK_COSMOS_GRPC_WEB_PORT}
    deploy:
      resources:
        limits:
          memory: ${INJ_CORE_STACK_RESOURCE_RAM_LIMIT}
        reservations:
          memory: ${INJ_CORE_STACK_RESOURCE_RAM_RESEVATION}
    networks:
      - injective
    volumes:
      - ./volumes/.injectived:/root/.injectived
    healthcheck:
        test: ["CMD", "curl", "-f", "http://injective-core:26657"]
        interval: 60s
        timeout: 5s
        retries: 5
        start_period: 1s

  injective-exchange-process:
    container_name: injective-exchange-process
    image: ${INJ_EXCHANGE_PROCESS_IMAGE_REPO}:${INJ_IMAGE_TAG}
    restart: always
    depends_on:
      - mongo
      - injective-core
    command: ${INJ_EXCHANGE_PROCESS_COMMAND}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      EXCHANGE_LOG_LEVEL: ${LOG_LEVEL}
      EXCHANGE_ENV: ${APP_ENV}
      EXCHANGE_SERVICE_WAIT_TIMEOUT: 1m
      APP_ENV: ${APP_ENV}
      APP_VERSION: fabd0d7
      LOG_BUGSNAG_KEY: ""
      LOG_BUGSNAG_ENABLED: "false"
      EXCHANGE_CHRONOS_BLOCK_OFFSET: 0
      EXCHANGE_CHRONOS_DATA_PATH: var/data
      EXCHANGE_CHRONOS_RPC_ADDR: tcp://injective-exchange-process:5500
      EXCHANGE_DB_MONGO_CONNECTION: mongodb://mongo:27017/?replicaSet=rs0&connect=direct
      EXCHANGE_DB_MONGO_DBNAME: exchange
      EXCHANGE_DB_ARCHIVE_EVENTS: "true"
      EXCHANGE_TENDERMINT_RPC: tcp://injective-core:26657
      EXCHANGE_COSMOS_GRPC: tcp://injective-core:9900
      EXCHANGE_COSMOS_CHAIN_ID: ${CHAIN_ID}
      EXCHANGE_ALCHEMY_ENDPOINT: ${ALCHEMY_ENDPOINT}
      EXCHANGE_STATSD_PREFIX: exchange-process
      EXCHANGE_STATSD_ADDR: ""
      EXCHANGE_STATSD_STUCK_DUR: 5m
      EXCHANGE_STATSD_MOCKING: "false"
      EXCHANGE_STATSD_DISABLED: "true"
    ports:
      - ${INJ_EXCHANGE_PROCESS_CHRONOS_RPC_PORT}:${INJ_EXCHANGE_PROCESS_CHRONOS_RPC_PORT}
    deploy:
      resources:
        limits:
          memory: ${INJ_EXCHANGE_PROCESS_RESOURCE_RAM_LIMIT}
        reservations:
          memory: ${INJ_EXCHANGE_PROCESS_RESOURCE_RAM_RESERVATION}
    networks:
      - injective
    volumes:
      - ./volumes/chronos:/apps/data/var/data

  injective-exchange-api:
    container_name: injective-exchange-api
    image: ${INJ_EXCHANGE_API_IMAGE_REPO}:${INJ_IMAGE_TAG}
    restart: always
    depends_on:
      - mongo
      - injective-core
      - injective-exchange-process
    command:
      - /bin/sh
      - -c
      - |
        echo "Wait chronos API for 10sec."
        sleep 10
        injective-exchange api
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      EXCHANGE_LOG_LEVEL: ${LOG_LEVEL}
      EXCHANGE_ENV: ${APP_ENV}
      EXCHANGE_SERVICE_WAIT_TIMEOUT: 1m
      APP_ENV: ${APP_ENV}
      APP_VERSION: fabd0d7
      LOG_BUGSNAG_KEY: ""
      LOG_BUGSNAG_ENABLED: "false"
      EXPLORER_RPC: tcp://injective-core:26657
      EXPLORER_EXCHANGE_ENDPOINT: https://dex.binance.org/api/v1
      EXPLORER_COINGECKO_ENDPOINT: https://api.coingecko.com/api/v3
      EXCHANGE_CHRONOS_BLOCK_OFFSET: 0
      EXCHANGE_CHRONOS_DATA_PATH: var/data
      EXCHANGE_CHRONOS_RPC_ADDR: tcp://injective-exchange-process:5500
      EXCHANGE_DB_MONGO_CONNECTION: mongodb://mongo:27017/?replicaSet=rs0&connect=direct
      EXCHANGE_DB_MONGO_DBNAME: exchange
      EXCHANGE_DB_ARCHIVE_EVENTS: "true"
      EXCHANGE_TENDERMINT_RPC: tcp://injective-core:26657
      EXCHANGE_COSMOS_GRPC: tcp://injective-core:9900
      EXCHANGE_COSMOS_CHAIN_ID: ${CHAIN_ID}
      EXCHANGE_GRPC_LISTEN_ADDR: 0.0.0.0:9910
      EXCHANGE_HTTP_LISTEN_ADDR: 0.0.0.0:4444
      EXCHANGE_HTTP_TLS_CERT: /apps/data/public.crt
      EXCHANGE_HTTP_TLS_KEY: /apps/data/private.key
      EXCHANGE_FEE_PAYER_PK: ""
      EXCHANGE_ALCHEMY_ENDPOINT: ${ALCHEMY_ENDPOINT}
      EXCHANGE_STATSD_PREFIX: exchange-api
      EXCHANGE_STATSD_ADDR: ""
      EXCHANGE_STATSD_STUCK_DUR: 5m
      EXCHANGE_STATSD_MOCKING: "false"
      EXCHANGE_STATSD_DISABLED: "true"
    ports:
      - ${INJ_EXCHANGE_API_CHRONOS_PORT}:${INJ_EXCHANGE_API_CHRONOS_PORT}
      - ${INJ_EXCHANGE_GRPC_LISTEN_PORT}:${INJ_EXCHANGE_GRPC_LISTEN_PORT}
    deploy:
      resources:
        limits:
          memory: ${INJ_EXCHANGE_API_RESOURCE_RAM_LIMIT}
        reservations:
          memory: ${INJ_EXCHANGE_API_RESOURCE_RAM_RESERVED}
    networks:
      - injective
    volumes:
      - ./volumes/chronos:/apps/data/var/data
      - ./volumes/exchange:/data/exchange


  injective-exchange-gateway:
    container_name: injective-exchange-gateway
    image: ${INJ_EXCHANGE_GATEWAY_IMAGE_REPO}:${INJ_IMAGE_TAG}
    restart: always
    depends_on:
      - mongo
      - injective-core
      - injective-exchange-process
      - injective-exchange-api
    environment:
      EXCHANGE_LOG_LEVEL: ${LOG_LEVEL}
      EXCHANGE_ENV: ${APP_ENV}
      EXCHANGE_SERVICE_WAIT_TIMEOUT: 1m
      APP_ENV: ${APP_ENV}
      APP_VERSION: fabd0d7
      LOG_BUGSNAG_KEY: ""
      LOG_BUGSNAG_ENABLED: "false"
      EXCHANGE_COSMOS_CHAIN_ID: ${CHAIN_ID}
      EXCHANGE_COSMOS_GRPC: tcp://injective-core:9900
      EXCHANGE_TENDERMINT_RPC: tcp://injective-core:26657
      EXCHANGE_FEE_PAYER_PK: ""
      EXCHANGE_GRPC_LISTEN_ADDR: 0.0.0.0:9910
      EXCHANGE_HTTP_LISTEN_ADDR: 0.0.0.0:4444
      EXCHANGE_HTTP_GATEWAY_LISTEN_ADDR: 0.0.0.0:8810
      EXCHANGE_HTTP_TLS_CERT: /apps/data/public.crt
      EXCHANGE_HTTP_TLS_KEY: /apps/data/private.key
      EXCHANGE_STATSD_PREFIX: exchange-gateway
      EXCHANGE_STATSD_ADDR: ""
      EXCHANGE_STATSD_STUCK_DUR: 5m
      EXCHANGE_STATSD_MOCKING: "false"
      EXCHANGE_STATSD_DISABLE: "true"
    command: ${INJ_EXCHANGE_GATEWAY_COMMAND}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - ${INJ_EXCHANGE_GATEWAY_CHRONOS_PORT_EXPOSED}:${INJ_EXCHANGE_GATEWAY_CHRONOS_PORT}
      - ${INJ_EXCHANGE_GATEWAY_HTTP_GATEWAY_LISTEN_PORT}:${INJ_EXCHANGE_GATEWAY_HTTP_GATEWAY_LISTEN_PORT}
      - ${INJ_EXCHANGE_GATEWAY_GRPC_PORT_EXPOSED}:${INJ_EXCHANGE_GATEWAY_GRPC_PORT}
    networks:
      - injective
    volumes:
      - ./volumes/exchange:/data/exchange

    
  injective-peggo:
    container_name: injective-peggo
    image: 981432137740.dkr.ecr.us-east-2.amazonaws.com/peggo:latest
    command:
      - /bin/sh
      - -c
      - |
        cd /root/.injectived/peggo/ && echo y | peggo tx register-eth-key && peggo orchestrator $INJ_ADDR:inj
    depends_on:
      - injective-core
    environment:
      APP_ENV: ${APP_ENV}
      APP_LOG_LEVEL: ${LOG_LEVEL}
      SERVICE_WAIT_TIMEOUT: 1m
      PEGGY_COSMOS_PRIVKEY: ""
      PEGGY_COSMOS_GRPC: tcp://localhost:9900
      PEGGY_TENDERMINT_RPC: http://localhost:26657
      PEGGY_FEE_DENOM: inj
      INJECTIVED_CHAIN_ID: ${CHAIN_ID}
      PEGGY_ETH_RPC:  http://localhost:8545
      PEGGY_ETH_PRIVATE_KEY: ""
      PEGGY_CONTRACT_ADDRESS: ""
      INJ_CONTRACT_ADDRESS: ""
      STATSD_PREFIX: peggo
      STATSD_ADDR: ""
      STATSD_STUCK_DUR: 5m
      STATSD_MOCKING: "false"
      STATSD_DISABLED: "true"
    networks:
      - injective
    volumes:
      - ./volumes/.injectived:/root/.injectived